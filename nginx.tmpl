error_log  stderr debug;
#error_log  /var/log/nginx/error.log;


    log_format  vhost  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout  vhost;

  #access_log  /dev/stdout;
  #access_log    /var/log/nginx/access.log;


  gzip  on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_vary off;
  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/rss+xml application/atom+xml text/javascript application/javascript application/json text/mathml;
  gzip_min_length  1000;
  gzip_disable     "MSIE [1-6]\.";


  variables_hash_max_size 1024;
  variables_hash_bucket_size 64;
  server_names_hash_bucket_size 64;
  types_hash_max_size 2048;
  types_hash_bucket_size 64;

#https://engineering.gosquared.com/optimising-nginx-node-js-and-networking-for-heavy-workloads
{{ range $virtualhost, $containers := groupByVirtualHost $ -}}
{{ $safehost := replace $virtualhost "." "_" -1 }}
upstream {{ $safehost }} {
{{- range $index , $container := $containers }}
  server {{ $container.PublicIp }}:{{ $container.HostPort }}  max_fails=0 fail_timeout=10s;
{{ end }}
    #keepalive 512;
}

server {
  listen 80;
  server_name {{ $virtualhost }};

  #http://nginx.org/en/docs/http/ngx_http_core_module.html#underscores_in_headers
  ignore_invalid_headers off;
  underscores_in_headers on;

  client_max_body_size 16M;
  keepalive_timeout 10;

  location / {

    if ($http_user_agent ~* facebookexternalhit/1.1) { gzip off; }

    proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
    proxy_http_version 1.1;
    proxy_set_header Host            $host;
    proxy_pass http://{{- $safehost -}};
  }

  #access_log off;
  #error_log /var/log/nginx/frontend-error.log;

  location /nginx_status {
      # Turn on nginx stats
      stub_status on;
      # I do not need logs for stats
      access_log   off;
      # Security: Only allow access from 192.168.1.100 IP #
      allow 127.0.0.1;
      allow 172.0.0.0/8;
      allow 10.0.0.0/8;
      # Send rest of the world to /dev/null #
      deny all;
  }

}


{{ end -}}
